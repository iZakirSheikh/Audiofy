plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.prime.player"
        minSdk 21
        targetSdk 33
        versionCode 12
        versionName "1.0.0-beta07"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            zipAlignEnabled true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // TODO - current only for debug version
            // needs to be removed
            // android team also released the latest technique for testing app with out
            // debug data; needs to study it further
            //signingConfig signingConfigs.debug
            //debuggable true
        }

        debug {
            // makes it possible to install both release and debug versions in same device.
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        //useIR = true
        freeCompilerArgs = [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xcontext-receivers",
               // "-Xuse-k2",
               // "-Xjdk-release=1.8"
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    //Android KTX is a set of Kotlin extensions that are included with Android Jetpack and other Android libraries.
    implementation 'androidx.core:core-ktx:1.9.0'
    // required for recent view.
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    def compose_version = '1.4.0-alpha02'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.6.1'

    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.animation:animation-graphics:$compose_version"

    //constraint layout
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha04'

    //test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // room data base
    def room_version = '2.4.3'
    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    implementation("androidx.room:room-ktx:$room_version")

    // The Accompanist Libraries
    def accompanist_version = '0.27.0'
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"

    //implementation "com.google.accompanist:accompanist-coil:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    implementation('io.coil-kt:coil-compose:2.2.2')
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    //ticker view
    implementation 'com.robinhood.ticker:ticker:2.0.4'

    //lottie
    def lottie_version = '5.2.0'
    implementation "com.airbnb.android:lottie-compose:$lottie_version"

    // kotlin json serialization library
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'

    //palette to extract image colors
    implementation "androidx.palette:palette-ktx:1.0.0"

    //Ken Burns
    implementation 'com.flaviofaria:kenburnsview:1.0.7'

    //Preferences and other widgets
    def support_version = '1.0.0-alpha12'
    implementation "com.github.prime-zs:support:$support_version"

    //work manager
    def work_version = "2.7.1"
    implementation("androidx.work:work-runtime-ktx:$work_version")
    implementation("androidx.hilt:hilt-work:1.0.0")
    // hilt support for work manager
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // Splash Screen API
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // Safe Args Compose
    def safe_args_version = "2.5.0"
    kapt("com.github.levinzonr.compose-safe-routing:processor-kapt:$safe_args_version")
    implementation "com.github.levinzonr.compose-safe-routing:accompanist-navigation:$safe_args_version"

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.0.3')
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // for support of multiple screen sizes
    implementation "androidx.window:window:1.0.0"

    //required by playback service
    implementation 'androidx.media:media:1.6.0'

    //palette to extract image colors
    implementation "androidx.palette:palette-ktx:1.0.0"

    //Play In-App Update:
    def in_app_update_version = '2.0.1'
    implementation("com.google.android.play:app-update:$in_app_update_version")
    implementation("com.google.android.play:app-update-ktx:$in_app_update_version")

    // In-App-Review
    def in_app_review = '2.0.1'
    implementation("com.google.android.play:review:$in_app_review")
    implementation("com.google.android.play:review-ktx:$in_app_review")

    // google play in-app billing
    def billing_version = '5.1.0'
    implementation "com.android.billingclient:billing:$billing_version"
    implementation "com.android.billingclient:billing-ktx:$billing_version"
    implementation("androidx.startup:startup-runtime:1.1.1")

    //Unity Ads
    implementation 'com.unity3d.ads:unity-ads:4.4.1'

}